// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: snowflake/v1/snowflake_service.proto

package snowflakev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for SnowflakeService.
type NextSnowflakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wait bool `protobuf:"varint,1,opt,name=wait,proto3" json:"wait,omitempty"` // If true, waits until a new ID can be generated if the sequence overflows.
}

func (x *NextSnowflakeRequest) Reset() {
	*x = NextSnowflakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextSnowflakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextSnowflakeRequest) ProtoMessage() {}

func (x *NextSnowflakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextSnowflakeRequest.ProtoReflect.Descriptor instead.
func (*NextSnowflakeRequest) Descriptor() ([]byte, []int) {
	return file_snowflake_v1_snowflake_service_proto_rawDescGZIP(), []int{0}
}

func (x *NextSnowflakeRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// Response message for SnowflakeService.
type NextSnowflakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snowflake *Snowflake `protobuf:"bytes,1,opt,name=snowflake,proto3" json:"snowflake,omitempty"`
}

func (x *NextSnowflakeResponse) Reset() {
	*x = NextSnowflakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextSnowflakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextSnowflakeResponse) ProtoMessage() {}

func (x *NextSnowflakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextSnowflakeResponse.ProtoReflect.Descriptor instead.
func (*NextSnowflakeResponse) Descriptor() ([]byte, []int) {
	return file_snowflake_v1_snowflake_service_proto_rawDescGZIP(), []int{1}
}

func (x *NextSnowflakeResponse) GetSnowflake() *Snowflake {
	if x != nil {
		return x.Snowflake
	}
	return nil
}

// Request message for batch Snowflake generation.
type BatchNextSnowflakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchSize int32 `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Wait      bool  `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"` // If true, waits until new IDs can be generated if the sequence overflows.
}

func (x *BatchNextSnowflakeRequest) Reset() {
	*x = BatchNextSnowflakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNextSnowflakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNextSnowflakeRequest) ProtoMessage() {}

func (x *BatchNextSnowflakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNextSnowflakeRequest.ProtoReflect.Descriptor instead.
func (*BatchNextSnowflakeRequest) Descriptor() ([]byte, []int) {
	return file_snowflake_v1_snowflake_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchNextSnowflakeRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *BatchNextSnowflakeRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// Response message for batch Snowflake generation.
type BatchNextSnowflakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snowflakes []*Snowflake `protobuf:"bytes,1,rep,name=snowflakes,proto3" json:"snowflakes,omitempty"`
}

func (x *BatchNextSnowflakeResponse) Reset() {
	*x = BatchNextSnowflakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNextSnowflakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNextSnowflakeResponse) ProtoMessage() {}

func (x *BatchNextSnowflakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_v1_snowflake_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNextSnowflakeResponse.ProtoReflect.Descriptor instead.
func (*BatchNextSnowflakeResponse) Descriptor() ([]byte, []int) {
	return file_snowflake_v1_snowflake_service_proto_rawDescGZIP(), []int{3}
}

func (x *BatchNextSnowflakeResponse) GetSnowflakes() []*Snowflake {
	if x != nil {
		return x.Snowflakes
	}
	return nil
}

var File_snowflake_v1_snowflake_service_proto protoreflect.FileDescriptor

var file_snowflake_v1_snowflake_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x14, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x4e,
	0x0a, 0x15, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x6f,
	0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x52, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x22, 0x4e,
	0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x55,
	0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x0a, 0x73, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x73, 0x32, 0xd5, 0x01, 0x0a, 0x10, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x4e, 0x65,
	0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x6e,
	0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x53,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78,
	0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x6e, 0x6f,
	0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e,
	0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5a, 0x5a,
	0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x61, 0x72,
	0x69, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x65, 0x70, 0x6f, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2d, 0x67,
	0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x6e,
	0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_snowflake_v1_snowflake_service_proto_rawDescOnce sync.Once
	file_snowflake_v1_snowflake_service_proto_rawDescData = file_snowflake_v1_snowflake_service_proto_rawDesc
)

func file_snowflake_v1_snowflake_service_proto_rawDescGZIP() []byte {
	file_snowflake_v1_snowflake_service_proto_rawDescOnce.Do(func() {
		file_snowflake_v1_snowflake_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_snowflake_v1_snowflake_service_proto_rawDescData)
	})
	return file_snowflake_v1_snowflake_service_proto_rawDescData
}

var file_snowflake_v1_snowflake_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snowflake_v1_snowflake_service_proto_goTypes = []interface{}{
	(*NextSnowflakeRequest)(nil),       // 0: snowflake.v1.NextSnowflakeRequest
	(*NextSnowflakeResponse)(nil),      // 1: snowflake.v1.NextSnowflakeResponse
	(*BatchNextSnowflakeRequest)(nil),  // 2: snowflake.v1.BatchNextSnowflakeRequest
	(*BatchNextSnowflakeResponse)(nil), // 3: snowflake.v1.BatchNextSnowflakeResponse
	(*Snowflake)(nil),                  // 4: snowflake.v1.Snowflake
}
var file_snowflake_v1_snowflake_service_proto_depIdxs = []int32{
	4, // 0: snowflake.v1.NextSnowflakeResponse.snowflake:type_name -> snowflake.v1.Snowflake
	4, // 1: snowflake.v1.BatchNextSnowflakeResponse.snowflakes:type_name -> snowflake.v1.Snowflake
	0, // 2: snowflake.v1.SnowflakeService.NextSnowflake:input_type -> snowflake.v1.NextSnowflakeRequest
	2, // 3: snowflake.v1.SnowflakeService.BatchNextSnowflake:input_type -> snowflake.v1.BatchNextSnowflakeRequest
	1, // 4: snowflake.v1.SnowflakeService.NextSnowflake:output_type -> snowflake.v1.NextSnowflakeResponse
	3, // 5: snowflake.v1.SnowflakeService.BatchNextSnowflake:output_type -> snowflake.v1.BatchNextSnowflakeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_snowflake_v1_snowflake_service_proto_init() }
func file_snowflake_v1_snowflake_service_proto_init() {
	if File_snowflake_v1_snowflake_service_proto != nil {
		return
	}
	file_snowflake_v1_snowflake_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_snowflake_v1_snowflake_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextSnowflakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_v1_snowflake_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextSnowflakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_v1_snowflake_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNextSnowflakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_v1_snowflake_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNextSnowflakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snowflake_v1_snowflake_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snowflake_v1_snowflake_service_proto_goTypes,
		DependencyIndexes: file_snowflake_v1_snowflake_service_proto_depIdxs,
		MessageInfos:      file_snowflake_v1_snowflake_service_proto_msgTypes,
	}.Build()
	File_snowflake_v1_snowflake_service_proto = out.File
	file_snowflake_v1_snowflake_service_proto_rawDesc = nil
	file_snowflake_v1_snowflake_service_proto_goTypes = nil
	file_snowflake_v1_snowflake_service_proto_depIdxs = nil
}
