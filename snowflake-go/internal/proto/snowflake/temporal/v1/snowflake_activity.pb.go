// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: snowflake/temporal/v1/snowflake_activity.proto

package snowflaketemporalv1

import (
	v1 "github.com/amari/snowflake-monorepo/snowflake-go/internal/proto/snowflake/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Input message for Snowflake activities in Temporal workflows.
type NextSnowflakeActivityInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, the activity will wait until a Snowflake ID is available.
	Wait bool `protobuf:"varint,1,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *NextSnowflakeActivityInput) Reset() {
	*x = NextSnowflakeActivityInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextSnowflakeActivityInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextSnowflakeActivityInput) ProtoMessage() {}

func (x *NextSnowflakeActivityInput) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextSnowflakeActivityInput.ProtoReflect.Descriptor instead.
func (*NextSnowflakeActivityInput) Descriptor() ([]byte, []int) {
	return file_snowflake_temporal_v1_snowflake_activity_proto_rawDescGZIP(), []int{0}
}

func (x *NextSnowflakeActivityInput) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// Output message for Snowflake activities in Temporal workflows.
type NextSnowflakeActivityOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The generated Snowflake ID.
	Snowflake *v1.Snowflake `protobuf:"bytes,1,opt,name=snowflake,proto3" json:"snowflake,omitempty"`
}

func (x *NextSnowflakeActivityOutput) Reset() {
	*x = NextSnowflakeActivityOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextSnowflakeActivityOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextSnowflakeActivityOutput) ProtoMessage() {}

func (x *NextSnowflakeActivityOutput) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextSnowflakeActivityOutput.ProtoReflect.Descriptor instead.
func (*NextSnowflakeActivityOutput) Descriptor() ([]byte, []int) {
	return file_snowflake_temporal_v1_snowflake_activity_proto_rawDescGZIP(), []int{1}
}

func (x *NextSnowflakeActivityOutput) GetSnowflake() *v1.Snowflake {
	if x != nil {
		return x.Snowflake
	}
	return nil
}

// Input message for batch Snowflake activities in Temporal workflows.
type BatchNextSnowflakeActivityInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of Snowflake IDs to generate.
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// If true, the activity will wait until Snowflake IDs are available.
	Wait bool `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *BatchNextSnowflakeActivityInput) Reset() {
	*x = BatchNextSnowflakeActivityInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNextSnowflakeActivityInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNextSnowflakeActivityInput) ProtoMessage() {}

func (x *BatchNextSnowflakeActivityInput) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNextSnowflakeActivityInput.ProtoReflect.Descriptor instead.
func (*BatchNextSnowflakeActivityInput) Descriptor() ([]byte, []int) {
	return file_snowflake_temporal_v1_snowflake_activity_proto_rawDescGZIP(), []int{2}
}

func (x *BatchNextSnowflakeActivityInput) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BatchNextSnowflakeActivityInput) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// Output message for batch Snowflake activities in Temporal workflows.
type BatchNextSnowflakeActivityOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The generated Snowflake IDs.
	Snowflakes []*v1.Snowflake `protobuf:"bytes,1,rep,name=snowflakes,proto3" json:"snowflakes,omitempty"`
}

func (x *BatchNextSnowflakeActivityOutput) Reset() {
	*x = BatchNextSnowflakeActivityOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNextSnowflakeActivityOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNextSnowflakeActivityOutput) ProtoMessage() {}

func (x *BatchNextSnowflakeActivityOutput) ProtoReflect() protoreflect.Message {
	mi := &file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNextSnowflakeActivityOutput.ProtoReflect.Descriptor instead.
func (*BatchNextSnowflakeActivityOutput) Descriptor() ([]byte, []int) {
	return file_snowflake_temporal_v1_snowflake_activity_proto_rawDescGZIP(), []int{3}
}

func (x *BatchNextSnowflakeActivityOutput) GetSnowflakes() []*v1.Snowflake {
	if x != nil {
		return x.Snowflakes
	}
	return nil
}

var File_snowflake_temporal_v1_snowflake_activity_proto protoreflect.FileDescriptor

var file_snowflake_temporal_v1_snowflake_activity_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61,
	0x6b, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x1a, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f,
	0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x1b, 0x4e, 0x65, 0x78, 0x74, 0x53,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x6f, 0x77,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61,
	0x6b, 0x65, 0x52, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x22, 0x4b, 0x0a,
	0x1f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c,
	0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x5b, 0x0a, 0x20, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37,
	0x0a, 0x0a, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x52, 0x0a, 0x73, 0x6e, 0x6f,
	0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x73, 0x42, 0x6b, 0x5a, 0x69, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x61, 0x72, 0x69, 0x2f, 0x73, 0x6e, 0x6f, 0x77,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x73,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x2d, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snowflake_temporal_v1_snowflake_activity_proto_rawDescOnce sync.Once
	file_snowflake_temporal_v1_snowflake_activity_proto_rawDescData = file_snowflake_temporal_v1_snowflake_activity_proto_rawDesc
)

func file_snowflake_temporal_v1_snowflake_activity_proto_rawDescGZIP() []byte {
	file_snowflake_temporal_v1_snowflake_activity_proto_rawDescOnce.Do(func() {
		file_snowflake_temporal_v1_snowflake_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_snowflake_temporal_v1_snowflake_activity_proto_rawDescData)
	})
	return file_snowflake_temporal_v1_snowflake_activity_proto_rawDescData
}

var file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snowflake_temporal_v1_snowflake_activity_proto_goTypes = []interface{}{
	(*NextSnowflakeActivityInput)(nil),       // 0: snowflake.temporal.v1.NextSnowflakeActivityInput
	(*NextSnowflakeActivityOutput)(nil),      // 1: snowflake.temporal.v1.NextSnowflakeActivityOutput
	(*BatchNextSnowflakeActivityInput)(nil),  // 2: snowflake.temporal.v1.BatchNextSnowflakeActivityInput
	(*BatchNextSnowflakeActivityOutput)(nil), // 3: snowflake.temporal.v1.BatchNextSnowflakeActivityOutput
	(*v1.Snowflake)(nil),                     // 4: snowflake.v1.Snowflake
}
var file_snowflake_temporal_v1_snowflake_activity_proto_depIdxs = []int32{
	4, // 0: snowflake.temporal.v1.NextSnowflakeActivityOutput.snowflake:type_name -> snowflake.v1.Snowflake
	4, // 1: snowflake.temporal.v1.BatchNextSnowflakeActivityOutput.snowflakes:type_name -> snowflake.v1.Snowflake
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_snowflake_temporal_v1_snowflake_activity_proto_init() }
func file_snowflake_temporal_v1_snowflake_activity_proto_init() {
	if File_snowflake_temporal_v1_snowflake_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextSnowflakeActivityInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextSnowflakeActivityOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNextSnowflakeActivityInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNextSnowflakeActivityOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snowflake_temporal_v1_snowflake_activity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snowflake_temporal_v1_snowflake_activity_proto_goTypes,
		DependencyIndexes: file_snowflake_temporal_v1_snowflake_activity_proto_depIdxs,
		MessageInfos:      file_snowflake_temporal_v1_snowflake_activity_proto_msgTypes,
	}.Build()
	File_snowflake_temporal_v1_snowflake_activity_proto = out.File
	file_snowflake_temporal_v1_snowflake_activity_proto_rawDesc = nil
	file_snowflake_temporal_v1_snowflake_activity_proto_goTypes = nil
	file_snowflake_temporal_v1_snowflake_activity_proto_depIdxs = nil
}
